name: Test Suite

on:
  pull_request:
    branches: [ master, develop ]
  push:
    branches: [ develop, feature/* ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      ROLLUP_SKIP_NODEJS_NATIVE: 'true'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install web-app dependencies
      working-directory: web-app
      run: npm ci

    - name: Create test env file
      working-directory: web-app
      shell: bash
      run: |
        echo "VITE_FIREBASE_API_KEY=dummy" >> .env
        echo "VITE_FIREBASE_AUTH_DOMAIN=dummy.firebaseapp.com" >> .env
        echo "VITE_FIREBASE_PROJECT_ID=dummy" >> .env
        echo "VITE_FIREBASE_STORAGE_BUCKET=dummy.appspot.com" >> .env
        echo "VITE_FIREBASE_MESSAGING_SENDER_ID=000000000000" >> .env
        echo "VITE_FIREBASE_APP_ID=1:000000000000:web:0000000000000000000000" >> .env
        echo "VITE_GOOGLE_API_KEY=dummy" >> .env
        echo "VITE_GOOGLE_CLIENT_ID=dummy.apps.googleusercontent.com" >> .env

    - name: Lint web-app
      working-directory: web-app
      run: npm run lint

    - name: Type-check web-app
      working-directory: web-app
      run: npx tsc -p tsconfig.json --noEmit

    - name: Build web-app
      working-directory: web-app
      run: npm run build

    - name: Run unit tests
      working-directory: web-app
      run: npm test -- --coverage --watchAll=false

    - name: Install functions dependencies
      working-directory: functions
      run: npm ci

    - name: Type-check functions
      working-directory: functions
      run: npx tsc -p tsconfig.json --noEmit

    - name: Build functions
      working-directory: functions
      run: npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./web-app/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
