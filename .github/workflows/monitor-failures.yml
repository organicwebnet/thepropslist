name: Monitor Test Failures

on:
  workflow_run:
    workflows: ["CI/CD", "Comprehensive Tests", "Basic Test"]
    types: [completed]

jobs:
  monitor:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Analyze Failure
      run: |
        echo "🔍 Analyzing workflow failure..."
        echo "Workflow: ${{ github.event.workflow_run.name }}"
        echo "Conclusion: ${{ github.event.workflow_run.conclusion }}"
        echo "Head Branch: ${{ github.event.workflow_run.head_branch }}"
        echo "Run ID: ${{ github.event.workflow_run.id }}"
        
        # Check if it's a test failure
        if [[ "${{ github.event.workflow_run.name }}" == *"Test"* ]]; then
          echo "🧪 Test failure detected"
          echo "Common test failure causes:"
          echo "1. Firebase configuration issues"
          echo "2. Network connectivity problems"
          echo "3. Test environment setup issues"
          echo "4. Playwright browser issues"
        fi
        
        # Check if it's a build failure
        if [[ "${{ github.event.workflow_run.name }}" == *"CI/CD"* ]]; then
          echo "🔨 Build failure detected"
          echo "Common build failure causes:"
          echo "1. TypeScript compilation errors"
          echo "2. Missing dependencies"
          echo "3. Linting errors"
          echo "4. Firebase deployment issues"
        fi

    - name: Create Issue for Critical Failures
      if: ${{ github.event.workflow_run.conclusion == 'failure' && github.event.workflow_run.head_branch == 'master' }}
      uses: actions/github-script@v7
      with:
        script: |
          const workflowName = context.payload.workflow_run.name;
          const runId = context.payload.workflow_run.id;
          const headBranch = context.payload.workflow_run.head_branch;
          const runUrl = context.payload.workflow_run.html_url;
          
          const title = `🚨 CI/CD Failure: ${workflowName}`;
          const body = `
          ## Workflow Failure Detected
          
          **Workflow:** ${workflowName}
          **Branch:** ${headBranch}
          **Run ID:** ${runId}
          **Status:** Failed
          
          **View Details:** ${runUrl}
          
          ## Common Fixes
          
          ### For Test Failures:
          - Check Firebase configuration in GitHub Secrets
          - Verify test environment setup
          - Check for network connectivity issues
          - Review Playwright browser configuration
          
          ### For Build Failures:
          - Check TypeScript compilation errors
          - Verify all dependencies are installed
          - Check for linting errors
          - Review Firebase deployment configuration
          
          ## Next Steps
          1. Review the workflow logs
          2. Identify the root cause
          3. Apply appropriate fixes
          4. Re-run the workflow
          
          ---
          *This issue was automatically created by the Monitor Test Failures workflow*
          `;
          
          // Check if an issue already exists for this workflow run
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'ci-failure'
          });
          
          const existingIssue = existingIssues.data.find(issue => 
            issue.title.includes(workflowName) && 
            issue.body.includes(runId.toString())
          );
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['ci-failure', 'bug', 'high-priority']
            });
            console.log('Created new issue for workflow failure');
          } else {
            console.log('Issue already exists for this workflow failure');
          }

    - name: Notify on Slack (if configured)
      if: ${{ github.event.workflow_run.conclusion == 'failure' }}
      run: |
        echo "📢 Would notify Slack about failure (if webhook configured)"
        echo "Workflow: ${{ github.event.workflow_run.name }}"
        echo "Status: Failed"
        echo "Branch: ${{ github.event.workflow_run.head_branch }}"
